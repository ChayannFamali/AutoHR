import logging

from django.conf import settings
from django.core.mail import send_mail
from django.template.loader import render_to_string
from django.utils import timezone

from .models import Notification, NotificationTemplate, NotificationType

logger = logging.getLogger(__name__)

class NotificationService:
    
    @staticmethod
    def send_application_confirmation(application):
        """–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∫–∞–Ω–¥–∏–¥–∞—Ç—É –æ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∑–∞—è–≤–∫–∏"""
        try:
            # –ü—Ä–æ—Å—Ç–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞ –±–µ–∑ —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–ø–∏—Å–∏ –≤ –ë–î (–ø–æ–∫–∞ –Ω–µ—Ç —Ç–∏–ø–æ–≤ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π)
            send_mail(
                subject=f'–ó–∞—è–≤–∫–∞ –Ω–∞ –≤–∞–∫–∞–Ω—Å–∏—é "{application.job.title}" –ø–æ–ª—É—á–µ–Ω–∞',
                message=f'–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, {application.candidate.full_name}!\n\n'
                       f'–í–∞—à–∞ –∑–∞—è–≤–∫–∞ –Ω–∞ –≤–∞–∫–∞–Ω—Å–∏—é "{application.job.title}" –≤ –∫–æ–º–ø–∞–Ω–∏–∏ {application.job.company.name} –ø–æ–ª—É—á–µ–Ω–∞ –∏ –±—É–¥–µ—Ç —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∞.\n\n'
                       f'–ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.\n\n'
                       f'–° —É–≤–∞–∂–µ–Ω–∏–µ–º,\n–ö–æ–º–∞–Ω–¥–∞ AutoHR',
                from_email=settings.DEFAULT_FROM_EMAIL,
                recipient_list=[application.candidate.email],
                fail_silently=True,  # –ù–µ –ª–æ–º–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –µ—Å–ª–∏ email –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω
            )
            
            logger.info(f'Application confirmation sent to {application.candidate.email}')
            return True
            
        except Exception as e:
            logger.error(f'Failed to send application confirmation: {str(e)}')
            return False
    
    @staticmethod
    def send_interview_scheduled(interview):
        """–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∫–∞–Ω–¥–∏–¥–∞—Ç—É –æ –Ω–∞–∑–Ω–∞—á–µ–Ω–Ω–æ–º —Å–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏–∏"""
        try:
            send_mail(
                subject=f'–°–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏–µ –Ω–∞–∑–Ω–∞—á–µ–Ω–æ - {interview.application.job.title}',
                message=f'–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, {interview.candidate.full_name}!\n\n'
                       f'–ú—ã —Ä–∞–¥—ã —Å–æ–æ–±—â–∏—Ç—å, —á—Ç–æ –≤–∞—Å –ø—Ä–∏–≥–ª–∞—à–∞—é—Ç –Ω–∞ —Å–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏–µ –ø–æ –≤–∞–∫–∞–Ω—Å–∏–∏ "{interview.application.job.title}".\n\n'
                       f'–î–µ—Ç–∞–ª–∏ —Å–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏—è:\n'
                       f'üìÖ –î–∞—Ç–∞: {interview.scheduled_at.strftime("%d.%m.%Y")}\n'
                       f'‚è∞ –í—Ä–µ–º—è: {interview.scheduled_at.strftime("%H:%M")}\n'
                       f'üìç –§–æ—Ä–º–∞—Ç: {interview.get_format_display()}\n'
                       f'üë§ –ò–Ω—Ç–µ—Ä–≤—å—é–µ—Ä: {interview.interviewer.get_full_name()}\n'
                       f'‚è±Ô∏è –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: {interview.duration_minutes} –º–∏–Ω—É—Ç\n'
                       + (f'üìç –ú–µ—Å—Ç–æ: {interview.location}\n' if interview.location else '') +
                       f'\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –≤–∞—à–µ —É—á–∞—Å—Ç–∏–µ.\n\n'
                       f'–° —É–≤–∞–∂–µ–Ω–∏–µ–º,\n–ö–æ–º–∞–Ω–¥–∞ AutoHR',
                from_email=settings.DEFAULT_FROM_EMAIL,
                recipient_list=[interview.candidate.email],
                fail_silently=True,
            )
            
            logger.info(f'Interview notification sent to {interview.candidate.email}')
            return True
            
        except Exception as e:
            logger.error(f'Failed to send interview notification: {str(e)}')
            return False
    
    @staticmethod
    def send_hr_notification(title, message, user_email):
        """–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ HR —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç—É"""
        try:
            send_mail(
                subject=f'AutoHR: {title}',
                message=message,
                from_email=settings.DEFAULT_FROM_EMAIL,
                recipient_list=[user_email],
                fail_silently=True,
            )
            return True
        except Exception as e:
            logger.error(f'Failed to send HR notification: {str(e)}')
            return False
